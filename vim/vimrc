" vim:foldmethod=marker
set encoding=utf-8

" PLUGINS {{{
"
execute pathogen#infect()
call pathogen#helptags()

filetype plugin indent on
syntax enable

" Solarized {{{
set t_Co=256
set background=dark
let g:solarized_termcolors=256
colo solarized
" }}}

" Ctrlp {{{
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
" }}}

" Clam {{{
let g:clam_winpos = 'bel'
" }}}

" Airline {{{
let g:airline_powerline_fonts=1
let g:airline_theme='zenburn'
" }}} (airline)

" }}} (PLUGINS)


" DEFAULTS {{{
"
set expandtab                           " expand tabs to spaces
set tabstop=4                           " number of spaces to display for each tab character
set softtabstop=4                       " number of spaces a typing a tab counts for in editing
set shiftwidth=4                        " number of spaces to use per step of indent

set foldmethod=syntax                   " define folds using language syntax
set cindent                             " use c-syle indenting (see help)
set backspace=indent,eol,start          " allow backspace in all contexts

set nu                                  " show line numbers
set cursorline                          " highight line of current cursor
set colorcolumn=85                      " highlight column/s
set list                                " display whitespace characters
set listchars=tab:>\ ,eol:Â¬             " symbols with which to display whitespace
set scrolloff=3                         " always display three lines above/below cursor

set ruler                               " display line,col of cursor on statusbar
set showcmd                             " show command in progress on last line
set laststatus=2                        " display a statusbar on all windows

set hlsearch                            " highlight search matches
set incsearch                           " highlight matches as they're typed

set modeline                            " detect modelines
set modelines=1                         " how many lines to check for modelines
set ttyfast                             " use a 'fast' terminal connection
set lazyredraw                          " don't redraw window during macro execution
set splitright                          " open new vertical splits on the right
set splitbelow                          " open new horizontal splits on the bottom

set undofile                            " save undo history for each file
set undodir=~/.vim/tmp/undo//           " store undofiles in unobtrusive location
set dir=~/.vim/tmp/swap//               " store swapfiles in unobtrusive location

" Colors for cursorline & colorcolumn (ugly by default in almost all colorschemes)
hi ColorColumn ctermbg=Black guibg=lightgrey
hi CursorLine ctermbg=Black cterm=bold
" }}}


" KEYMAPS {{{

" Currently taken leader keys: <space>MTUVWmptuvwxz
let mapleader=","
let maplocalleader=","

" FASTER NAVIGATION! {{{
" navigate windows with <c-{h,j,k,l}>
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
" simplify navigation on wrapped lines
nnoremap j gj
nnoremap k gk
" Use + and - to resize current window
map + <C-W>+
map - <C-W>-
" }}}

" FASTER SEARCHING! {{{
" ctrlp buffer search
nnoremap <leader>p :CtrlPBuffer<cr>
" deactivate search highlighing
nnoremap <leader><space> :nohlsearch<cr>
" Use normal regex search by default
nnoremap / /\v
vnoremap / /\v
" }}}

" FASTER MODE SELECTION! {{{
" normal mode with jk
inoremap jk <Esc>
" semicolon to enter command line
nnoremap ; :
" }}}

" COMMON EDITS, WITH SPEED! {{{
" Enter and S-Enter insert a line below/above cursor
map <S-CR> O<Esc>
map <CR> o<Esc>
" Swap the case of a word or line
nnoremap <leader>u bgUwA
inoremap <c-u> <esc>bgUwA
nnoremap <leader>U VgUA
" Make strings easily
inoremap qv ""<esc>i
" Paste the current line to the one below it
nnoremap - :m+1<cr>
" }}}

" USEFUL TOGGLES! {{{
" Open/close folds with spacebar
nnoremap <space> za
" switch tabstop style
nnoremap <leader>t :set expandtab tabstop=4 shiftwidth=4 softtabstop=4<cr>
nnoremap <leader>T :set expandtab tabstop=8 shiftwidth=8 softtabstop=4<cr>
nnoremap <leader>m :set expandtab tabstop=2 shiftwidth=2 softtabstop=2<cr>
nnoremap <leader>M :set noexpandtab tabstop=4 softtabstop=4 shiftwidth=4<cr>
" toggle wrapping (and display current wrapping status)
nnoremap <leader>W :setlocal wrap!<cr>:setlocal wrap?<cr>
" }}}

" INTERACT WITH THE WORLD! {{{
" Use %% to refer to directory of current file on command line
cnoremap %% <C-R>=expand('%:h').'/'<cr>
" open python repl
map <leader>z :!python2 -i %<cr>
map <leader>x :!python -i %<cr>
" edit .vimrc
nnoremap <leader>v mP:e $MYVIMRC<CR>
nnoremap <leader>V :so $MYVIMRC<CR>`P
" Save as sudo from nonsudo buffer
nnoremap <leader>w :w !sudo tee %<cr>
" }}} (interact...)

" }}} (KEYMAPS)


" AUTOCMDS {{{

" filetype detection corrections
augroup ft "{{{
    au!
    au BufNewFile,BufReadPost cakefile,Cakefile set filetype=coffee
    au BufNewFile,BufReadPost *.json set filetype=javascript
    au Bufnewfile,Bufreadpost *.m set filetype=objc
    au Bufnewfile,Bufreadpost *.md set filetype=markdown
augroup END "}}}

" Really, these are default settings, but they're guarded by the BufWinEnter
" event to prevent vim from complaining about window size when opened in a
" small terminal
augroup wsize "{{{
    au!
    au BufWinEnter * set winheight=30        " default height of selected window
    au BufWinEnter * set winminheight=6      " min height of unselected windows
    au BufWinEnter * set winwidth=80         " default width of selected window
augroup END "}}}

augroup golang "{{{
    au!
    au FileType go iabbrev pkm package main
    au FileType go inoremap fcm func main() {<cr>}<esc>ko
augroup END "}}}

augroup html "{{{
    au!
    au FileType html inoremap abdoc <!DOCTYPE html>
    au FileType html inoremap abchar <meta charset="utf=8">
    au FileType html inoremap abjs <script type="text/javascript" src=""></script><esc>F"i
    au FileType html inoremap abcss <link rel="stylesheet" href="" /><esc>F"i
    au FileType html inoremap abtitle <title></title><esc>F<i
    au FileType html inoremap abhref <a href=""></a><esc>F"i
    au FileType html inoremap abhtml <html><CR></html><esc>ko
    au FileType html inoremap abhead <head><CR></head><esc>ko
    au FileType html inoremap abbody <body><CR></body><esc>ko
    au FileType html inoremap abdiv <div><CR></div><esc>ko
    au FileType html inoremap abform <form><CR></form><esc>ko
    au FileType html inoremap abspan <span><CR></span><esc>ko
    au FileType html inoremap abstyle <style><CR></style><esc>ko
    au FileType html inoremap abpa <p><CR></p><esc>ko
augroup END "}}}

augroup twospace "{{{
    au!
    au FileType html,javascript,ruby,coffee,jade set softtabstop=2
    au FileType html,javascript,ruby,coffee,jade set tabstop=2
    au FileType html,javascript,ruby,coffee,jade set shiftwidth=2
augroup END "}}}

augroup misc "{{{
    au!
    " indentation based folding for several langs
    autocmd FileType coffee,ruby,lua set foldmethod=indent
    " deactivate colorcolumn for man page
    autocmd FileType man set cc=0
augroup END "}}}
" }}}


" SPELLING {{{
iab functino function
" }}}


" LOCAL SETTINGS {{{
if filereadable(glob("~/.vimrc-local"))
    source ~/.vimrc-local
endif
" }}}
